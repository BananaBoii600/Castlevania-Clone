[gd_scene load_steps=12 format=2]

[ext_resource path="res://players/friederich/attacks/void/aura.png" type="Texture" id=1]
[ext_resource path="res://players/friederich/attacks/void/sword.png" type="Texture" id=2]
[ext_resource path="res://players/friederich/demonic/attacks/chop.png" type="Texture" id=3]
[ext_resource path="res://players/friederich/demonic/attacks/void.png" type="Texture" id=4]

[sub_resource type="Shader" id=1]

code = "shader_type canvas_item;
render_mode blend_premul_alpha;

//this shader only works properly with premultiplied alpha blend mode
uniform float aura_width=2.0;
uniform vec4 aura_color:hint_color;
uniform vec4 modulate:hint_color;

void fragment() {
vec4 col = vec4(modulate.rgb,texture(TEXTURE,UV).a*modulate.a);
vec2 ps = TEXTURE_PIXEL_SIZE;
float a;
float maxa=col.a;
float mina=col.a;
a=texture(TEXTURE,UV+vec2(0,-aura_width)*ps).a;
maxa=max(a,maxa); 
mina=min(a,mina);
a=texture(TEXTURE,UV+vec2(0,aura_width)*ps).a;
maxa=max(a,maxa); 
mina=min(a,mina);
a=texture(TEXTURE,UV+vec2(-aura_width,0)*ps).a;
maxa=max(a,maxa); 
mina=min(a,mina);
a=texture(TEXTURE,UV+vec2(aura_width,0)*ps).a;
maxa=max(a,maxa); 
mina=min(a,mina);
col.rgb*=col.a;
COLOR=col;//mix(col,aura_color,maxa-mina);

float auraa=(maxa-mina);

COLOR.rgb+=aura_color.rgb*(maxa-mina);
}"

[sub_resource type="ShaderMaterial" id=2]

render_priority = 0
shader = SubResource( 1 )
shader_param/aura_width = 2.0
shader_param/aura_color = Color( 0.709804, 0.733333, 0, 1 )
shader_param/modulate = Color( 0.247059, 0.227451, 0.219608, 1 )
_sections_unfolded = [ "shader_param" ]

[sub_resource type="Shader" id=3]

code = "shader_type canvas_item;

uniform float multiplier = 1.0;

void vertex() {
	VERTEX.x = multiplier * VERTEX.x;
}"

[sub_resource type="ShaderMaterial" id=4]

render_priority = 0
shader = SubResource( 3 )
shader_param/multiplier = 1.0
_sections_unfolded = [ "shader_param" ]

[sub_resource type="ParticlesMaterial" id=5]

render_priority = 0
trail_divisor = 1
emission_shape = 0
flag_align_y = false
flag_rotate_y = false
flag_disable_z = true
spread = 0.0
flatness = 0.0
gravity = Vector3( 0, 0, 0 )
initial_velocity = 0.0
initial_velocity_random = 0.0
angular_velocity = 0.0
angular_velocity_random = 0.0
orbit_velocity = 0.0
orbit_velocity_random = 0.0
linear_accel = 0.0
linear_accel_random = 0.0
radial_accel = 0.0
radial_accel_random = 0.0
tangential_accel = 0.0
tangential_accel_random = 0.0
damping = 0.0
damping_random = 0.0
angle = 0.0
angle_random = 0.0
scale = 1.0
scale_random = 0.0
color = Color( 1, 0, 0, 0.25 )
hue_variation = 0.0
hue_variation_random = 0.0
anim_speed = 1.0
anim_speed_random = 0.0
anim_offset = 0.0
anim_offset_random = 0.0
anim_loop = false
_sections_unfolded = [ "Angle", "Angular Velocity", "Animation", "Color", "Damping", "Emission Shape", "Flags", "Gravity", "Hue Variation", "Initial Velocity", "Linear Accel", "Orbit Velocity", "Scale", "Spread", "Tangential Accel", "Trail" ]

[sub_resource type="Shader" id=6]

code = "shader_type canvas_item;

//this shader only works properly with premultiplied alpha blend mode
uniform float aura_width=2.0;
uniform vec4 aura_color:hint_color;
uniform float opacity = 1.0;

void fragment() {
vec4 col = vec4(texture(TEXTURE,UV).rgb, texture(TEXTURE,UV).a*opacity);
vec2 ps = TEXTURE_PIXEL_SIZE;
float a;
float maxa=col.a;
float mina=col.a;
a=texture(TEXTURE,UV+vec2(0,-aura_width)*ps).a;
maxa=max(a,maxa); 
mina=min(a,mina);
a=texture(TEXTURE,UV+vec2(0,aura_width)*ps).a;
maxa=max(a,maxa); 
mina=min(a,mina);
a=texture(TEXTURE,UV+vec2(-aura_width,0)*ps).a;
maxa=max(a,maxa); 
mina=min(a,mina);
a=texture(TEXTURE,UV+vec2(aura_width,0)*ps).a;
maxa=max(a,maxa); 
mina=min(a,mina);
col.rgb*=col.a;
COLOR=col;//mix(col,aura_color,maxa-mina);
float auraa=(maxa-mina);

COLOR.rgb+=aura_color.rgb*(maxa-mina);
}"

[sub_resource type="ShaderMaterial" id=7]

render_priority = 0
shader = SubResource( 6 )
shader_param/aura_width = 2.0
shader_param/aura_color = Color( 1, 0, 0, 1 )
shader_param/opacity = 1.0
_sections_unfolded = [ "shader_param" ]

[node name="attack" type="Node2D"]

_sections_unfolded = [ "Transform", "Z Index" ]
__meta__ = {
"__editor_plugin_screen__": "Script"
}

[node name="aura" type="Sprite" parent="." index="0"]

self_modulate = Color( 1, 0.301961, 0, 1 )
texture = ExtResource( 1 )
offset = Vector2( -80, -56 )
vframes = 2
hframes = 3
frame = 4

[node name="sword" type="Sprite" parent="." index="1"]

material = SubResource( 2 )
texture = ExtResource( 2 )
offset = Vector2( -80, -56 )
vframes = 2
hframes = 3
frame = 3
_sections_unfolded = [ "Material" ]

[node name="trail" type="Particles2D" parent="." index="2"]

show_behind_parent = true
material = SubResource( 4 )
position = Vector2( -174, -112 )
scale = Vector2( -1, 1 )
emitting = true
amount = 3
lifetime = 1.0
one_shot = false
preprocess = 0.0
speed_scale = 2.0
explosiveness = 0.0
randomness = 0.0
fixed_fps = 0
fract_delta = true
visibility_rect = Rect2( -100, -100, 200, 200 )
local_coords = false
draw_order = 0
process_material = SubResource( 5 )
texture = ExtResource( 3 )
normal_map = null
h_frames = 3
v_frames = 2
_sections_unfolded = [ "Textures", "Transform" ]

[node name="attack" type="Sprite" parent="." index="3"]

material = SubResource( 7 )
texture = ExtResource( 4 )
offset = Vector2( -160, -96 )
vframes = 2
hframes = 3
frame = 3
_sections_unfolded = [ "Animation", "Material", "Offset", "Transform" ]


