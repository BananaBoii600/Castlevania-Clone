[gd_scene load_steps=14 format=2]

[ext_resource path="res://players/magic/thunder/thunder.gd" type="Script" id=1]
[ext_resource path="res://players/magic/MagicParameters.gd" type="Script" id=2]
[ext_resource path="res://players/magic/thunder/attack.png" type="Texture" id=3]
[ext_resource path="res://players/magic/thunder/splash.png" type="Texture" id=4]
[ext_resource path="res://players/magic/thunder/charge.png" type="Texture" id=5]
[ext_resource path="res://players/magic/thunder/thunder.wav" type="AudioStream" id=6]

[sub_resource type="RectangleShape2D" id=1]

custom_solver_bias = 0.0
extents = Vector2( 16, 16 )

[sub_resource type="Shader" id=2]

code = "shader_type canvas_item;
render_mode blend_premul_alpha;

//this shader only works properly with premultiplied alpha blend mode
uniform float aura_width=2.0;
uniform vec4 aura_color:hint_color;
uniform vec4 modulate:hint_color;

void fragment() {
vec4 col = vec4(modulate.rgb,texture(TEXTURE,UV).a*modulate.a);
vec2 ps = TEXTURE_PIXEL_SIZE;
float a;
float maxa=col.a;
float mina=col.a;
a=texture(TEXTURE,UV+vec2(0,-aura_width)*ps).a;
maxa=max(a,maxa); 
mina=min(a,mina);
a=texture(TEXTURE,UV+vec2(0,aura_width)*ps).a;
maxa=max(a,maxa); 
mina=min(a,mina);
a=texture(TEXTURE,UV+vec2(-aura_width,0)*ps).a;
maxa=max(a,maxa); 
mina=min(a,mina);
a=texture(TEXTURE,UV+vec2(aura_width,0)*ps).a;
maxa=max(a,maxa); 
mina=min(a,mina);
col.rgb*=col.a;
COLOR=col;//mix(col,aura_color,maxa-mina);

float auraa=(maxa-mina);

COLOR.rgb+=aura_color.rgb*(maxa-mina);
}"

[sub_resource type="ShaderMaterial" id=3]

render_priority = 0
shader = SubResource( 2 )
shader_param/aura_width = 2.0
shader_param/aura_color = Color( 0, 0, 0, 0 )
shader_param/modulate = Color( 1, 0.964706, 0.537255, 0 )
_sections_unfolded = [ "shader_param" ]

[sub_resource type="Curve" id=4]

min_value = 0.0
max_value = 1.0
bake_resolution = 100
_data = [ Vector2( 0, 1 ), 0.0, 0.0, 0, 0, Vector2( 1, 0.0917969 ), 0.0, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=5]

flags = 4
width = 2048
curve = SubResource( 4 )

[sub_resource type="ParticlesMaterial" id=6]

render_priority = 0
trail_divisor = 1
emission_shape = 2
emission_box_extents = Vector3( 64, 32, 1 )
flag_align_y = false
flag_rotate_y = false
flag_disable_z = true
spread = 20.0
flatness = 0.0
gravity = Vector3( 0, 0, 0 )
initial_velocity = 0.0
initial_velocity_random = 0.0
angular_velocity = 1.4013e-44
angular_velocity_random = 0.0
orbit_velocity = 0.0
orbit_velocity_random = 0.0
linear_accel = 0.0
linear_accel_random = 0.0
radial_accel = 0.0
radial_accel_random = 0.0
tangential_accel = 0.0
tangential_accel_random = 0.0
damping = 0.0
damping_random = 0.0
angle = 0.0
angle_random = 0.0
scale = 0.2
scale_random = 0.1
scale_curve = SubResource( 5 )
color = Color( 1, 1, 1, 1 )
hue_variation = 0.0
hue_variation_random = 0.0
anim_speed = 0.0
anim_speed_random = 0.0
anim_offset = 0.0
anim_offset_random = 0.0
anim_loop = false
_sections_unfolded = [ "Angle", "Angular Velocity", "Damping", "Emission Shape", "Flags", "Gravity", "Initial Velocity", "Linear Accel", "Orbit Velocity", "Radial Accel", "Scale", "Spread", "Tangential Accel", "Trail" ]

[sub_resource type="Animation" id=7]

length = 3.0
loop = false
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("sparks:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("splash:self_modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1, 1.05, 1.1, 1.15, 1.2, 1.25, 1.3, 1.35, 1.4, 1.45, 1.5, 1.55, 1.6, 1.65, 1.7, 1.75, 1.8, 1.85 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0.7 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 0.7 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 0.7 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 0.7 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 0.7 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 0.7 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 0.7 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 0.7 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 0.7 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 0.7 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 0.7 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 0.7 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 0.7 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 0.7 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 0.7 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 0.7 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 0.7 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 0.7 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 0.7 ), Color( 1, 1, 1, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("sparks:emitting")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 2.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("attack:material:shader_param/modulate")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 0.964706, 0.537255, 1 ), Color( 1, 0.964706, 0.537255, 0 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("attack:material:shader_param/aura_color")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 0.0666667, 0.454902, 1, 1 ), Color( 0, 0, 0, 0 ) ]
}

[node name="Thunder" type="Node2D" index="0"]

script = ExtResource( 1 )
__meta__ = {
"__editor_plugin_screen__": "Script"
}

[node name="collision" type="Node2D" parent="." index="0"]

script = ExtResource( 2 )
type = "thunder"

[node name="Area2D" type="Area2D" parent="collision" index="0"]

position = Vector2( 0, 16 )
input_pickable = true
gravity_vec = Vector2( 0, 1 )
gravity = 98.0
linear_damp = 0.1
angular_damp = 1.0
audio_bus_override = false
audio_bus_name = "Master"

[node name="magic" type="CollisionShape2D" parent="collision/Area2D" index="0"]

shape = SubResource( 1 )

[node name="attack" type="Sprite" parent="." index="1"]

self_modulate = Color( 1, 1, 1, 0 )
material = SubResource( 3 )
scale = Vector2( 0.333333, 1 )
texture = ExtResource( 3 )
offset = Vector2( 0, -280 )
_sections_unfolded = [ "Material" ]

[node name="splash" type="Sprite" parent="." index="2"]

self_modulate = Color( 1, 1, 1, 0 )
scale = Vector2( 0.333333, 0.333333 )
texture = ExtResource( 4 )
_sections_unfolded = [ "Visibility" ]

[node name="sparks" type="Particles2D" parent="." index="3"]

emitting = false
amount = 16
lifetime = 2.5
one_shot = false
preprocess = 0.0
speed_scale = 5.0
explosiveness = 0.0
randomness = 0.0
fixed_fps = 0
fract_delta = true
visibility_rect = Rect2( -100, -100, 200, 200 )
local_coords = true
draw_order = 0
process_material = SubResource( 6 )
texture = ExtResource( 5 )
normal_map = null
h_frames = 1
v_frames = 1
_sections_unfolded = [ "Drawing", "Material", "Process Material", "Textures", "Time", "Visibility" ]

[node name="AnimationPlayer" type="AnimationPlayer" parent="." index="4"]

root_node = NodePath("..")
autoplay = ""
playback_process_mode = 1
playback_default_blend_time = 0.0
playback_speed = 1.0
anims/finish = SubResource( 7 )
blend_times = [  ]

[node name="SamplePlayer" type="Node" parent="." index="5"]

[node name="thunder" type="AudioStreamPlayer" parent="SamplePlayer" index="0"]

stream = ExtResource( 6 )
volume_db = 0.0
autoplay = false
mix_target = 0
bus = "SFX"


